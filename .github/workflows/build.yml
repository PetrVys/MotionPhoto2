name: Build a release

on:
  workflow_dispatch:
  release:
    types:
      - created

jobs:
  build:
    name: Build packages
    permissions:
      contents: write
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            TARGET: macos
            CMD_BUILD: pyinstaller build-osx-linux.spec
            CMD_ZIP: zip -r9 MotionPhoto2_macOS_${{ github.ref_name }}.zip motionphoto2
            OUT_FILE_NAME: MotionPhoto2_macOS_${{ github.ref_name }}.zip
          - os: ubuntu-latest
            TARGET: linux
            CMD_BUILD: pyinstaller build-osx-linux.spec
            CMD_ZIP: zip -r9 MotionPhoto2_Linux_${{ github.ref_name }}.zip motionphoto2
            OUT_FILE_NAME: MotionPhoto2_Linux_${{ github.ref_name }}.zip
          - os: windows-latest
            TARGET: windows
            CMD_BUILD: pyinstaller build-win.spec
            CMD_ZIP: Compress-Archive motionphoto2.exe MotionPhoto2_Windows_${{ github.ref_name }}.zip
            OUT_FILE_NAME: MotionPhoto2_Windows_${{ github.ref_name }}.zip
    steps:
    - name: Checkout sources
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.13

    - name: Install pre-requisite dependencies for linux
      if: ${{matrix.TARGET == 'linux'}}
      run: |
        sudo apt update
        sudo apt install -y dpkg-dev \
          build-essential \
          python3-dev \
          freeglut3-dev \
          libgl1-mesa-dev \
          libglu1-mesa-dev \
          libgstreamer-plugins-base1.0-dev \
          libgtk-3-dev \
          libjpeg-dev \
          libnotify-dev \
          libpng-dev \
          libsdl2-dev \
          libsm-dev \
          libtiff-dev \
          libwebkit2gtk-4.1-dev \
          libxtst-dev

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt 
        pip install pyinstaller       

    - name: Install dependencies specific for macOS
      if: ${{matrix.TARGET == 'macos'}}
      run: |
        pip install --force-reinstall --no-binary :all: psutil
        pip download -d /tmp --only-binary :all: --platform macosx_10_13_x86_64 pillow
        pip download -d /tmp --only-binary :all: --platform macosx_11_0_arm64 pillow
        pip install delocate
        delocate-merge /tmp/pillow-*
        pip install --force-reinstall /tmp/pillow-*_universal2.whl

    - name: Build with pyinstaller for ${{matrix.TARGET}}
      run: ${{matrix.CMD_BUILD}}
      
    - name: Compress application
      run: |
        cd dist
        ${{matrix.CMD_ZIP}}
      
    - name: Upload the built package
      uses: actions/upload-artifact@v4
      with:
        path: dist/${{ matrix.OUT_FILE_NAME}}
        name: ${{ matrix.OUT_FILE_NAME}}

    - name: Associate the built package to the release, if any
      if: ${{ github.event_name == 'release' }}
      uses: softprops/action-gh-release@v2
      with:
        files: dist/${{ matrix.OUT_FILE_NAME}}
 
